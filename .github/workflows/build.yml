name: Test and build Docker image, deploy if master

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: registry.tko-aly.fi
  IMAGE_NAME: roi-service-tgbot

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - run: npm ci
      - run: npm run lint
      - run: npm test
  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      SHOULD_PUSH: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for worker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ secrets.PRIVATE_REGISTRY_URL }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry
        if: ${{ env.SHOULD_PUSH }}
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY_URL }}
          username: ${{ secrets.PRIVATE_REGISTRY_USER }}
          password: ${{ secrets.PRIVATE_REGISTRY_PW }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: ${{ env.SHOULD_PUSH}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Summarize
        if: ${{ env.SHOULD_PUSH }}
        run: |
          echo "### Deployed images" >> $GITHUB_STEP_SUMMARY
          echo "**Pushed tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "**Labels**: ${{ steps.meta.outputs.labels }}" >> $GITHUB_STEP_SUMMARY
